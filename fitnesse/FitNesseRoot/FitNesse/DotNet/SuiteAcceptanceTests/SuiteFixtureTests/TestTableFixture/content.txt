!3 Convenient access to table cells.
Sometimes you just want a fixture that lets you access the cells in a table by row and column.  TableFixture provides some simple methods that allow just that.  
 * The (row,column) coordinates are zero based, 
 * with (0,0) being the upper left cell.  

The methods of TableFixture are:

|Comment|
|{{{protected abstract void DoStaticTable(int rows)}}}|!-TableFixture-! is an abstract class that you must derive from.  You must override ''!-DoStaticTable-!'' to perform the functions of the fixture.  The number of rows in the table is passed in ''rows''.|
|{{{protected Parse GetCell(int row, int column)}}}|Returns the addressed table cell as a ''Parse''.|
|{{{protected String GetText(int row, int column)}}}|Returns the text within the addressed table cell.|
|{{{protected int GetInt(int row, int column)}}}|Converts the text within the addressed cell to an int and returns it.|
|{{{protected boolean Blank(int row, int column)}}}|Returns ''true'' if the addressed table cell is blank.|
|{{{protected void Right(int row, int column)}}}|Turns the addressed table cell green.|
|{{{protected void Wrong(int row, int column)}}}|Turns the addressed table cell red.|
|{{{protected void Wrong(int row, int column, string actual)}}}|Turns the addressed table cell red, and annotates it with the ''actual'' value.|
|{{{protected void Ignore(int row, int column)}}}|Turns the addressed cell gray.|
----
|Bowling Game Fixture|
|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0||0|
|5|5|5|5|5|5|5|5|5|5|5|5|5|5|5|5|5|5|5|5|5|150|

|Bowling Game Fixture|
|10|10|10|10|10|10|10|10|10|10|10|10||||||||||300|
