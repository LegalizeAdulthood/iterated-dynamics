!2 Test that variables are properly defined and expressed on a page.
 * Variables are defined as !-!define name {value}-!. 
 * Alternately they are defined as !-!define name (value)-!.
  * This is so that you can create variables with {} or () in them. 
 * They are expressed using !-${name}-! 
-----
!3 Test a variable defined and used on the same page.
#
 * Create a page with a variable definition and use..
#
|Action Fixture.|
|start|Page Builder|
|enter|line|!-!define x {1}-!|
|enter|line|!-x is ${x}-!|
|enter|line|!-PAGE_NAME is ${PAGE_NAME}-!|
|enter|line|!-PAGE_PATH is ${PAGE_PATH}-!|
|enter|page|!-VariablePage-!|
#
 * Fetch that page.
#
|Response Requester.|
|uri|valid?|contents?|
|!-VariablePage-!|true||
#
 * Inspect the text to see if the variable was expressed.
#
|Response Examiner.|
|type|pattern|matches?|
|contents|x is 1|true|
|contents|PAGE_NAME is !-&lt-!;a href="Variable!--!Page"!-&gt;-!Variable!--!Page|true|
|contents|PAGE_PATH is .|true|

----
!3 Test a variable defined and used on the same page using () syntax.
#
 * Create a page with a variable definition and use..
#
|Action Fixture.|
|start|Page Builder|
|enter|line|!-!define x (1)-!|
|enter|line|!-x is ${x}-!|
|enter|page|!-ParenVariablePage-!|
#
 * Fetch that page.
#
|Response Requester.|
|uri|valid?|contents?|
|!-ParenVariablePage-!|true||
#
 * Inspect the text to see if the variable was expressed.
#
|Response Examiner.|
|type|pattern|matches?|value|
|contents|x is 1|true||

----
!3 Test literals in variables with {} and () syntax.
!note The internal representation of a literal is changed from !lit(n) to !lit?n? so as to avoid conflict with the !define X () widget syntax.
#
 * Create a page with a variable definition and use..
#
|Action Fixture.|
|start|Page Builder|
|enter|line|!-!-!define xLitBRACE {!-!-!-xLitBRACE-!-!-!}|
|enter|line|!!--!define xLitPAREN (!-!-!-xLitPAREN-!-!-!)|
|enter|line|!-xLitBRACE is ${xLitBRACE}-!|
|enter|line|!-xLitPAREN is ${xLitPAREN}-!|
|enter|page|!-ParenVariablePage-!|
#
 * Fetch that page.
#
|Response Requester.|
|uri|valid?|contents?|
|!-ParenVariablePage-!|true||
#
 * Inspect the text to see if the variable was expressed.
#
|Response Examiner.|
|type|pattern|matches?|value|
|contents|xLitPAREN is xLitPAREN|true||
|contents|xLitBRACE is xLitBRACE|true||

----
!3 Test a variables with periods
#
 * Create a page with a variable definitions with periods.
#
|Action Fixture.|
|start|Page Builder|
|enter|line|!-!define xy. (1)-!|
|enter|line|!-!define x.y (2)-!|
|enter|line|!-!define .xy (3)-!|
|enter|line|!-!define .x.y. (4)-!|
|enter|line|!-!define .xy. (5)-!|
|enter|line|!-!define .x.y (6)-!|
|enter|line|!-!define x.y. (7)-!|
|enter|line|!-!define x..y (8)-!|
|enter|line|!-~xy. is ${xy.}~-!|
|enter|line|!-~x.y is ${x.y}~-!|
|enter|line|!-~.xy is ${.xy}~-!|
|enter|line|!-~.x.y. is ${.x.y.}~-!|
|enter|line|!-~.xy. is ${.xy.}~-!|
|enter|line|!-~.x.y is ${.x.y}~-!|
|enter|line|!-~x.y. is ${x.y.}~-!|
|enter|line|!-~x..y is ${x..y}~-!|
|enter|page|!-ParenVariablePage-!|
#
 * Fetch that page.
#
|Response Requester.|
|uri|valid?|contents?|
|!-ParenVariablePage-!|true||
#
 * Inspect the text to see if the variables were expressed properly.
#
|Response Examiner.|
|type|pattern|matches?|value|
|contents|~xy. is 1~|true||
|contents|~x.y is 2~|true||
|contents|~.xy is 3~|true||
|contents|~.x.y. is 4~|true||
|contents|~.xy. is 5~|true||
|contents|~.x.y is 6~|true||
|contents|~x.y. is 7~|true||
|contents|~x..y is 8~|true||
